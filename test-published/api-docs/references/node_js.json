{
  "branches": [
    {
      "branches": [
        {
          "branches": [
            {
              "code": "chart-types/line_and_scatter/basic-line/node_js/code.txt",
              "id": "basic-line",
              "languages": [
                "python",
                "r",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Basic Line Plot",
              "parent": "line_and_scatter",
              "type": "model",
              "url": "https://plot.ly/~TestBot/44"
            },
            {
              "code": "chart-types/line_and_scatter/line-scatter/node_js/code.txt",
              "id": "line-scatter",
              "languages": [
                "python",
                "r",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Line and Scatter Plot",
              "parent": "line_and_scatter",
              "type": "model",
              "url": "https://plot.ly/~TestBot/45"
            },
            {
              "code": "chart-types/line_and_scatter/line-style/node_js/code.txt",
              "id": "line-style",
              "languages": [
                "python",
                "r",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Colored and Styled Scatter Plot",
              "parent": "line_and_scatter",
              "type": "model",
              "url": "https://plot.ly/~TestBot/46"
            },
            {
              "code": "chart-types/line_and_scatter/line-shapes/node_js/code.txt",
              "id": "line-shapes",
              "languages": [
                "python",
                "r",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Line Shape Options for Interpolation",
              "parent": "line_and_scatter",
              "type": "model",
              "url": "https://plot.ly/~TestBot/352"
            }
          ],
          "description": "How to make line and scatter plots in {language}. {num_categories} examples of basic and colored line and scatter plots.",
          "has_thumbnail": true,
          "id": "line_and_scatter",
          "name": "Line and Scatter Plots",
          "parent": "chart-types",
          "relative_url": "line-and-scatter"
        },
        {
          "branches": [
            {
              "code": "chart-types/bar/basic-bar/node_js/code.txt",
              "id": "basic-bar",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Basic Bar Chart",
              "parent": "bar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/265"
            },
            {
              "code": "chart-types/bar/grouped-bar/node_js/code.txt",
              "id": "grouped-bar",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Grouped Bar Chart",
              "parent": "bar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/267"
            },
            {
              "code": "chart-types/bar/stacked-bar/node_js/code.txt",
              "id": "stacked-bar",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Stacked Bar Chart",
              "parent": "bar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/266"
            },
            {
              "code": "chart-types/bar/style-bar/node_js/code.txt",
              "id": "style-bar",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Colored and Styled Bar Chart",
              "parent": "bar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/264"
            },
            {
              "code": "chart-types/bar/bar-with-hover-text/node_js/code.txt",
              "id": "bar-with-hover-text",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js"
              ],
              "name": "Bar Chart with Hover Text",
              "parent": "bar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/346"
            },
            {
              "code": "chart-types/bar/bar-marker-array/node_js/code.txt",
              "id": "bar-marker-array",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Customizing Individual Bar Colors",
              "parent": "bar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/345"
            }
          ],
          "description": "How to make a bar chart in {language}. {num_categories} examples of grouped, stacked, overlaid, and colored bar charts.",
          "has_thumbnail": true,
          "id": "bar",
          "name": "Bar Charts",
          "parent": "chart-types",
          "relative_url": "bar-charts"
        },
        {
          "branches": [
            {
              "code": "chart-types/box/basic-box-plot/node_js/code.txt",
              "id": "basic-box-plot",
              "languages": [
                "python",
                "r",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Basic Box Plot",
              "parent": "box",
              "type": "model",
              "url": "https://plot.ly/~TestBot/38"
            },
            {
              "code": "chart-types/box/box-plot-jitter/node_js/code.txt",
              "id": "box-plot-jitter",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Box Plot That Displays the Underlying Data",
              "parent": "box",
              "type": "model",
              "url": "https://plot.ly/~TestBot/39"
            },
            {
              "code": "chart-types/box/box-grouped/node_js/code.txt",
              "id": "box-grouped",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Grouped Box Plot",
              "parent": "box",
              "type": "model",
              "url": "https://plot.ly/~TestBot/37"
            }
          ],
          "description": "How to make a box plot in {language}. {num_categories} examples of box plots in {language} that are grouped, colored, and display the underlying data distribution.",
          "has_thumbnail": true,
          "id": "box",
          "name": "Box Plots",
          "parent": "chart-types",
          "relative_url": "box-plots"
        },
        {
          "branches": [
            {
              "code": "chart-types/bubble/bubblechart/node_js/code.txt",
              "id": "bubblechart",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Marker Size, Color, and Symbol as an Array",
              "parent": "bubble",
              "type": "model",
              "url": "https://plot.ly/~TestBot/83"
            }
          ],
          "description": "How to make a bubble chart in {language}. Examples of scatter charts whose markers have variable color, size, and symbols.",
          "has_thumbnail": true,
          "id": "bubble",
          "name": "Bubble Charts",
          "parent": "chart-types",
          "relative_url": "bubble-charts"
        },
        {
          "branches": [
            {
              "code": "chart-types/contour/simple-contour/node_js/code.txt",
              "id": "simple-contour",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Basic Contour Plot",
              "parent": "contour",
              "type": "model",
              "url": "https://plot.ly/~TestBot/85"
            },
            {
              "code": "chart-types/contour/2dhistogram-contour-subplots/node_js/code.txt",
              "id": "2dhistogram-contour-subplots",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "2D Histogram Contour Plot <br>with Histogram Subplots",
              "parent": "contour",
              "type": "model",
              "url": "https://plot.ly/~TestBot/84"
            }
          ],
          "description": "How to make a contour plot in {language}. {num_categories} examples of contour plots of matrices with subplots, custom color-scales, and smoothing.",
          "has_thumbnail": true,
          "id": "contour",
          "name": "Contour Plots",
          "parent": "chart-types",
          "relative_url": "contour-plots"
        },
        {
          "branches": [
            {
              "code": "chart-types/area/basic-area/node_js/code.txt",
              "id": "basic-area",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Basic Overlaid Area Chart",
              "parent": "area",
              "type": "model",
              "url": "https://plot.ly/~TestBot/63"
            }
          ],
          "description": "How to make a filled area plot in {language}. An area chart displays a solid color between the traces of a graph.",
          "has_thumbnail": true,
          "id": "area",
          "name": "Filled Area Plots",
          "parent": "chart-types",
          "relative_url": "filled-area-plots"
        },
        {
          "branches": [
            {
              "code": "chart-types/error-bar/basic-error-bar/node_js/code.txt",
              "id": "basic-error-bar",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Basic Symmetric Error Bars",
              "parent": "error-bar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/71"
            },
            {
              "code": "chart-types/error-bar/error-bar-bar/node_js/code.txt",
              "id": "error-bar-bar",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Bar Chart with Error Bars",
              "parent": "error-bar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/77"
            },
            {
              "code": "chart-types/error-bar/error-bar-horizontal/node_js/code.txt",
              "id": "error-bar-horizontal",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Horizontal Error Bars",
              "parent": "error-bar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/74"
            },
            {
              "code": "chart-types/error-bar/error-bar-asymmetric-array/node_js/code.txt",
              "id": "error-bar-asymmetric-array",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Asymmetric Error Bars",
              "parent": "error-bar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/76"
            },
            {
              "code": "chart-types/error-bar/error-bar-style/node_js/code.txt",
              "id": "error-bar-style",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Colored and Styled Error Bars",
              "parent": "error-bar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/75"
            },
            {
              "code": "chart-types/error-bar/percent-error-bar/node_js/code.txt",
              "id": "percent-error-bar",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Error Bars as a Percentage of the y-Value",
              "parent": "error-bar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/73"
            },
            {
              "code": "chart-types/error-bar/error-bar-asymmetric-constant/node_js/code.txt",
              "id": "error-bar-asymmetric-constant",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Asymmetric Error Bars with a Constant Offset",
              "parent": "error-bar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/72"
            }
          ],
          "description": "How to add error bars to a line, scatter, or bar chart. {num_categories} examples of symmetric, asymmetric, horizontal, and colored error bars.",
          "has_thumbnail": true,
          "id": "error-bar",
          "name": "Error Bars",
          "parent": "chart-types",
          "relative_url": "error-bars"
        },
        {
          "branches": [
            {
              "code": "chart-types/heatmap/basic-heatmap/node_js/code.txt",
              "id": "basic-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Basic Heatmap",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/58"
            },
            {
              "code": "chart-types/heatmap/labelled-heatmap/node_js/code.txt",
              "id": "labelled-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Heatmap with Categorical Axis Labels",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/61"
            },
            {
              "code": "chart-types/heatmap/custom-colorscale/node_js/code.txt",
              "id": "custom-colorscale",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Custom Colorscale",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/53"
            },
            {
              "code": "chart-types/heatmap/Earth-heatmap/node_js/code.txt",
              "id": "Earth-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Earth Colorscale",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/48"
            },
            {
              "code": "chart-types/heatmap/YIGnBu-heatmap/node_js/code.txt",
              "id": "YIGnBu-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "YIGnBu Colorscale",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/49"
            },
            {
              "code": "chart-types/heatmap/Hot-heatmap/node_js/code.txt",
              "id": "Hot-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Hot Colorscale",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/50"
            },
            {
              "code": "chart-types/heatmap/Blackbody-heatmap/node_js/code.txt",
              "id": "Blackbody-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Blackbody Colorscale",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/51"
            },
            {
              "code": "chart-types/heatmap/Bluered-heatmap/node_js/code.txt",
              "id": "Bluered-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Bluered Colorscale",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/52"
            },
            {
              "code": "chart-types/heatmap/YIOrRd-heatmap/node_js/code.txt",
              "id": "YIOrRd-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "YIOrRd Heatmap",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/47"
            },
            {
              "code": "chart-types/heatmap/Picnic-heatmap/node_js/code.txt",
              "id": "Picnic-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Picnic Colorscale",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/54"
            },
            {
              "code": "chart-types/heatmap/Greens-heatmap/node_js/code.txt",
              "id": "Greens-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Greens Colorscale",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/55"
            },
            {
              "code": "chart-types/heatmap/Greys-heatmap/node_js/code.txt",
              "id": "Greys-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Greys Colorscale",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/57"
            },
            {
              "code": "chart-types/heatmap/Jet-heatmap/node_js/code.txt",
              "id": "Jet-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Jet Colorscale",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/59"
            },
            {
              "code": "chart-types/heatmap/Electric-heatmap/node_js/code.txt",
              "id": "Electric-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Electric Colorscale",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/60"
            },
            {
              "code": "chart-types/heatmap/RdBu-heatmap/node_js/code.txt",
              "id": "RdBu-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "RdBu Colorscale",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/56"
            },
            {
              "code": "chart-types/heatmap/Portland-heatmap/node_js/code.txt",
              "id": "Portland-heatmap",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Portland Heatmap",
              "parent": "heatmap",
              "type": "model",
              "url": "https://plot.ly/~TestBot/62"
            }
          ],
          "description": "How to make a heatmap in {language} with a matrix. {num_categories} examples\u00a0of colored and labeled heatmaps with custom colorscales.",
          "has_thumbnail": true,
          "id": "heatmap",
          "name": "Heatmaps",
          "parent": "chart-types",
          "relative_url": "heatmaps"
        },
        {
          "branches": [
            {
              "code": "chart-types/histogram/basic-histogram/node_js/code.txt",
              "id": "basic-histogram",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Basic Histogram",
              "parent": "histogram",
              "type": "model",
              "url": "https://plot.ly/~TestBot/68"
            },
            {
              "code": "chart-types/histogram/horizontal-histogram/node_js/code.txt",
              "id": "horizontal-histogram",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Horizontal Histogram",
              "parent": "histogram",
              "type": "model",
              "url": "https://plot.ly/~TestBot/66"
            },
            {
              "code": "chart-types/histogram/overlaid-histogram/node_js/code.txt",
              "id": "overlaid-histogram",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Overlaid Histgram",
              "parent": "histogram",
              "type": "model",
              "url": "https://plot.ly/~TestBot/65"
            },
            {
              "code": "chart-types/histogram/stacked-histogram/node_js/code.txt",
              "id": "stacked-histogram",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Stacked Histograms",
              "parent": "histogram",
              "type": "model",
              "url": "https://plot.ly/~TestBot/67"
            },
            {
              "code": "chart-types/histogram/style-histogram/node_js/code.txt",
              "id": "style-histogram",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Colored and Styled Histograms",
              "parent": "histogram",
              "type": "model",
              "url": "https://plot.ly/~TestBot/64"
            }
          ],
          "description": "How to make a histogram in {language}. {num_categories} examples of colored, horizontal, and normal histogram bar charts.",
          "has_thumbnail": true,
          "id": "histogram",
          "name": "Histograms",
          "parent": "chart-types",
          "relative_url": "histograms"
        },
        {
          "branches": [
            {
              "code": "chart-types/histogram2d/2d-histogram/node_js/code.txt",
              "id": "2d-histogram",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "2D Histogram of a Bivariate Normal Distribution",
              "parent": "histogram2d",
              "type": "model",
              "url": "https://plot.ly/~TestBot/80"
            },
            {
              "code": "chart-types/histogram2d/2d-histogram-options/node_js/code.txt",
              "id": "2d-histogram-options",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "2D Histogram Binning and Styling Options",
              "parent": "histogram2d",
              "type": "model",
              "url": "https://plot.ly/~TestBot/82"
            },
            {
              "code": "chart-types/histogram2d/2d-histogram-scatter/node_js/code.txt",
              "id": "2d-histogram-scatter",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "2D Histogram Overlaid with a Scatter Chart",
              "parent": "histogram2d",
              "type": "model",
              "url": "https://plot.ly/~TestBot/81"
            }
          ],
          "description": "How to make a 2D histogram in {language}. A 2D histogram is a visualization of a bivariate distribution.",
          "has_thumbnail": true,
          "id": "histogram2d",
          "name": "2D Histograms",
          "parent": "chart-types",
          "relative_url": "2D-Histogram"
        },
        {
          "branches": [
            {
              "code": "chart-types/polar/polar-line/node_js/code.txt",
              "id": "polar-line",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Polar Line Chart",
              "parent": "polar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/42"
            },
            {
              "code": "chart-types/polar/polar-scatter/node_js/code.txt",
              "id": "polar-scatter",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Polar Scatter Chart",
              "parent": "polar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/41"
            },
            {
              "code": "chart-types/polar/polar-area-chart/node_js/code.txt",
              "id": "polar-area-chart",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Polar Area Chart",
              "parent": "polar",
              "type": "model",
              "url": "https://plot.ly/~TestBot/43"
            }
          ],
          "description": "How to graph polar charts in {language}. {num_categories} examples of polar line, polar scatter and polar area charts.",
          "has_thumbnail": true,
          "id": "polar",
          "name": "Polar Charts",
          "parent": "chart-types",
          "relative_url": "polar-chart"
        },
        {
          "branches": [
            {
              "code": "chart-types/time-series/date-axes/node_js/code.txt",
              "id": "date-axes",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Date Strings",
              "parent": "time-series",
              "type": "model",
              "url": "https://plot.ly/~TestBot/70"
            }
          ],
          "description": "How to plot date and time in {language}. An example of a time-series plot.",
          "has_thumbnail": true,
          "id": "time-series",
          "name": "Time Series",
          "parent": "chart-types",
          "relative_url": "time-series"
        },
        {
          "branches": [
            {
              "code": "chart-types/mixed/contour-scatter/node_js/code.txt",
              "id": "contour-scatter",
              "languages": [
                "python",
                "matlab",
                "r",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "A Contour and Scatter Plot <br>of the Method of Steepest Descent",
              "parent": "mixed",
              "type": "model",
              "url": "https://plot.ly/~TestBot/78"
            },
            {
              "code": "chart-types/mixed/bar-line/node_js/code.txt",
              "id": "bar-line",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Line Chart and a Bar Chart",
              "parent": "mixed",
              "type": "model",
              "url": "https://plot.ly/~TestBot/79"
            }
          ],
          "description": "How to design figures with multiple chart types in {language}. An example of a contour plot with a scatter plot and a bar chart with a line chart.",
          "has_thumbnail": true,
          "id": "mixed",
          "name": "Multiple Chart Types",
          "parent": "chart-types",
          "relative_url": "graphing-multiple-chart-types"
        },
        {
          "branches": [
            {
              "code": "chart-types/log/plotly-log-axes/node_js/code.txt",
              "id": "plotly-log-axes",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Logarithmic Axes",
              "parent": "log",
              "type": "model",
              "url": "https://plot.ly/~TestBot/343"
            }
          ],
          "description": "How to make a plot with logarithmic axes in {language}.",
          "has_thumbnail": true,
          "id": "log",
          "name": "Log Plots",
          "parent": "chart-types",
          "relative_url": "log-plot"
        },
        {
          "branches": [
            {
              "code": "chart-types/3d-scatter/simple-3d-scatter/node_js/code.txt",
              "id": "simple-3d-scatter",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "plotly_js",
                "node_js"
              ],
              "name": "3D Scatter Plot",
              "parent": "3d-scatter",
              "type": "model",
              "url": "https://plot.ly/~TestBot/756"
            }
          ],
          "description": "How to make 3D scatter plots in {language}.",
          "has_thumbnail": true,
          "id": "3d-scatter",
          "name": "3D Scatter Plots",
          "parent": "chart-types",
          "relative_url": "3d-scatter-plots"
        },
        {
          "branches": [
            {
              "code": "chart-types/3d-surface/elevations-3d-surface/node_js/code.txt",
              "id": "elevations-3d-surface",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "plotly_js",
                "node_js"
              ],
              "name": "Topographical 3D Surface Plot",
              "parent": "3d-surface",
              "type": "model",
              "url": "https://plot.ly/~TestBot/758"
            }
          ],
          "description": "How to make 3D surface plots in {language}.",
          "has_thumbnail": true,
          "id": "3d-surface",
          "name": "3D Surface Plots",
          "parent": "chart-types",
          "relative_url": "3d-surface-plots"
        },
        {
          "branches": [
            {
              "code": "chart-types/3d-line/random-walk/node_js/code.txt",
              "id": "random-walk",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "plotly_js",
                "node_js"
              ],
              "name": "3D Line Plot<br>3D Random Walk",
              "parent": "3d-line",
              "type": "model",
              "url": "https://plot.ly/~TestBot/757"
            }
          ],
          "description": "How to make 3D line plots in {language}.",
          "has_thumbnail": true,
          "id": "3d-line",
          "name": "3D Line Plots",
          "parent": "chart-types",
          "relative_url": "3d-line-plots"
        }
      ],
      "has_thumbnail": true,
      "id": "chart-types",
      "name": "Chart Types",
      "parent": "hard-coded"
    },
    {
      "branches": [
        {
          "branches": [
            {
              "code": "multiple-axes-insets-subplots/multiple-axes/multiple-axes-double/node_js/code.txt",
              "id": "multiple-axes-double",
              "languages": [
                "python",
                "r",
                "julia",
                "matlab",
                "node_js",
                "plotly_js"
              ],
              "name": "Two Y-Axes",
              "parent": "multiple-axes",
              "type": "model",
              "url": "https://plot.ly/~TestBot/27"
            },
            {
              "code": "multiple-axes-insets-subplots/multiple-axes/multiple-axes-multiple/node_js/code.txt",
              "id": "multiple-axes-multiple",
              "languages": [
                "python",
                "r",
                "julia",
                "matlab",
                "node_js",
                "plotly_js"
              ],
              "name": "Multiple Y-Axes",
              "parent": "multiple-axes",
              "type": "model",
              "url": "https://plot.ly/~TestBot/28"
            }
          ],
          "description": "How to make a graph with multiple axes in {language}.",
          "has_thumbnail": true,
          "id": "multiple-axes",
          "name": "Multiple Axes",
          "parent": "multiple-axes-insets-subplots",
          "relative_url": "multiple-axes"
        },
        {
          "branches": [
            {
              "code": "multiple-axes-insets-subplots/subplots/simple-subplot/node_js/code.txt",
              "id": "simple-subplot",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Simple Subplot",
              "parent": "subplots",
              "type": "model",
              "url": "https://plot.ly/~TestBot/33"
            },
            {
              "code": "multiple-axes-insets-subplots/subplots/custom-size-subplot/node_js/code.txt",
              "id": "custom-size-subplot",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Custom Sized Subplot",
              "parent": "subplots",
              "type": "model",
              "url": "https://plot.ly/~TestBot/32"
            },
            {
              "code": "multiple-axes-insets-subplots/subplots/multiple-subplots/node_js/code.txt",
              "id": "multiple-subplots",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Multiple Subplots",
              "parent": "subplots",
              "type": "model",
              "url": "https://plot.ly/~TestBot/29"
            },
            {
              "code": "multiple-axes-insets-subplots/subplots/shared-axes-subplots/node_js/code.txt",
              "id": "shared-axes-subplots",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Subplots with Shared Axes",
              "parent": "subplots",
              "type": "model",
              "url": "https://plot.ly/~TestBot/30"
            },
            {
              "code": "multiple-axes-insets-subplots/subplots/stacked-subplots/node_js/code.txt",
              "id": "stacked-subplots",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Stacked Subplots",
              "parent": "subplots",
              "type": "model",
              "url": "https://plot.ly/~TestBot/34"
            },
            {
              "code": "multiple-axes-insets-subplots/subplots/stacked-coupled-subplots/node_js/code.txt",
              "id": "stacked-coupled-subplots",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Stacked Subplots with a Shared X-Axis",
              "parent": "subplots",
              "type": "model",
              "url": "https://plot.ly/~TestBot/31"
            }
          ],
          "description": "How to make subplots in {language}. {num_categories} examples of stacked, custom-sized, and gridded subplots.",
          "has_thumbnail": true,
          "id": "subplots",
          "name": "Subplots",
          "parent": "multiple-axes-insets-subplots",
          "relative_url": "subplots"
        },
        {
          "branches": [
            {
              "code": "multiple-axes-insets-subplots/insets/simple-inset/node_js/code.txt",
              "id": "simple-inset",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Simple Inset Graph",
              "parent": "insets",
              "type": "model",
              "url": "https://plot.ly/~TestBot/26"
            }
          ],
          "description": "How to make an inset graph in {language}.",
          "has_thumbnail": true,
          "id": "insets",
          "name": "Inset Plots",
          "parent": "multiple-axes-insets-subplots",
          "relative_url": "insets"
        }
      ],
      "has_thumbnail": true,
      "id": "multiple-axes-insets-subplots",
      "name": "Multiple Axes, Subplots, and Insets",
      "parent": "hard-coded"
    },
    {
      "branches": [
        {
          "branches": [
            {
              "code": "layout/annotations/text-chart-basic/node_js/code.txt",
              "id": "text-chart-basic",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Adding Text to Data in Line and Scatter Plots",
              "parent": "annotations",
              "type": "model",
              "url": "https://plot.ly/~TestBot/19"
            },
            {
              "code": "layout/annotations/hover-chart-basic/node_js/code.txt",
              "id": "hover-chart-basic",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Adding Hover Text to Data in Line and Scatter Plots",
              "parent": "annotations",
              "type": "model",
              "url": "https://plot.ly/~TestBot/358"
            },
            {
              "code": "layout/annotations/simple-annotation/node_js/code.txt",
              "id": "simple-annotation",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Simple Annotation",
              "parent": "annotations",
              "type": "model",
              "url": "https://plot.ly/~TestBot/20"
            },
            {
              "code": "layout/annotations/multiple-annotation/node_js/code.txt",
              "id": "multiple-annotation",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Multiple Annotations",
              "parent": "annotations",
              "type": "model",
              "url": "https://plot.ly/~TestBot/21"
            },
            {
              "code": "layout/annotations/text-chart-styling/node_js/code.txt",
              "id": "text-chart-styling",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Custom Text Color and Styling",
              "parent": "annotations",
              "type": "model",
              "url": "https://plot.ly/~TestBot/18"
            },
            {
              "code": "layout/annotations/style-annotation/node_js/code.txt",
              "id": "style-annotation",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Styling and Coloring Annotations",
              "parent": "annotations",
              "type": "model",
              "url": "https://plot.ly/~TestBot/22"
            }
          ],
          "description": "How to add text labels and annotations to plots in {language}.",
          "has_thumbnail": false,
          "id": "annotations",
          "name": "Text and Annotations",
          "parent": "layout",
          "relative_url": "text-and-annotations"
        },
        {
          "branches": [
            {
              "code": "layout/axes/axes-booleans/node_js/code.txt",
              "id": "axes-booleans",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Toggling Axes Lines, Ticks, Labels, and Autorange",
              "parent": "axes",
              "type": "model",
              "url": "https://plot.ly/~TestBot/2"
            },
            {
              "code": "layout/axes/axes-lines/node_js/code.txt",
              "id": "axes-lines",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Styling and Coloring Axes and the Zero-Line",
              "parent": "axes",
              "type": "model",
              "url": "https://plot.ly/~TestBot/3"
            },
            {
              "code": "layout/axes/axes-ticks/node_js/code.txt",
              "id": "axes-ticks",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Tick Placement, Color, and Style",
              "parent": "axes",
              "type": "model",
              "url": "https://plot.ly/~TestBot/4"
            },
            {
              "code": "layout/axes/axes-labels/node_js/code.txt",
              "id": "axes-labels",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Set and Style Axes Title Labels and Ticks",
              "parent": "axes",
              "type": "model",
              "url": "https://plot.ly/~TestBot/5"
            },
            {
              "code": "layout/axes/axes-reversed/node_js/code.txt",
              "id": "axes-reversed",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Reversed Axes",
              "parent": "axes",
              "type": "model",
              "url": "https://plot.ly/~TestBot/6"
            },
            {
              "code": "layout/axes/axes-range-manual/node_js/code.txt",
              "id": "axes-range-manual",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Setting the Range of Axes Manually",
              "parent": "axes",
              "type": "model",
              "url": "https://plot.ly/~TestBot/7"
            },
            {
              "code": "layout/axes/axes-range-mode/node_js/code.txt",
              "id": "axes-range-mode",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "<code>nonnegative</code>, <code>tozero</code>, and <code>normal</code> Rangemode",
              "parent": "axes",
              "type": "model",
              "url": "https://plot.ly/~TestBot/8"
            },
            {
              "code": "layout/axes/axes-range-type/node_js/code.txt",
              "id": "axes-range-type",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Logarithmic Axes",
              "parent": "axes",
              "type": "model",
              "url": "https://plot.ly/~TestBot/9"
            }
          ],
          "description": "How to adjust axes properties in {language}. {num_categories} examples of linear and logarithmic axes, axes titles, and styling and coloring axes and grid lines.",
          "has_thumbnail": false,
          "id": "axes",
          "name": "Axes",
          "parent": "layout",
          "relative_url": "axes"
        },
        {
          "branches": [
            {
              "code": "layout/font/global-font/node_js/code.txt",
              "id": "global-font",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Global Font Properties",
              "parent": "font",
              "type": "model",
              "url": "https://plot.ly/~TestBot/17"
            }
          ],
          "description": "How to edit and style the font of graphs in {language}.",
          "has_thumbnail": false,
          "id": "font",
          "name": "Text and Font Styling",
          "parent": "layout",
          "relative_url": "font"
        },
        {
          "branches": [
            {
              "code": "layout/labels/styling-names/node_js/code.txt",
              "id": "styling-names",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "",
              "parent": "labels",
              "type": "model",
              "url": "https://plot.ly/~TestBot/16"
            }
          ],
          "description": "How to set the title, legend-entries, and axis-titles in {language}.",
          "has_thumbnail": false,
          "id": "labels",
          "name": "Setting the Title, Legend Entries, and Axis Titles",
          "parent": "layout",
          "relative_url": "figure-labels"
        },
        {
          "branches": [
            {
              "code": "layout/latex/latex/node_js/code.txt",
              "id": "latex",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "LaTeX Typesetting",
              "parent": "latex",
              "type": "model",
              "url": "https://plot.ly/~TestBot/1"
            }
          ],
          "description": "How to add LaTeX to {language} graphs.",
          "has_thumbnail": false,
          "id": "latex",
          "name": "LaTeX",
          "parent": "layout",
          "relative_url": "LaTeX"
        },
        {
          "branches": [
            {
              "code": "layout/legends/legend-visibility/node_js/code.txt",
              "id": "legend-visibility",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Hiding the Legend",
              "parent": "legends",
              "type": "model",
              "url": "https://plot.ly/~TestBot/13"
            },
            {
              "code": "layout/legends/legend-labels/node_js/code.txt",
              "id": "legend-labels",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Legend Names",
              "parent": "legends",
              "type": "model",
              "url": "https://plot.ly/~TestBot/11"
            },
            {
              "code": "layout/legends/legend-inside/node_js/code.txt",
              "id": "legend-inside",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Positioning the Legend Inside the Plot",
              "parent": "legends",
              "type": "model",
              "url": "https://plot.ly/~TestBot/15"
            },
            {
              "code": "layout/legends/legend-outside/node_js/code.txt",
              "id": "legend-outside",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Positioning the Legend Outside the Plot",
              "parent": "legends",
              "type": "model",
              "url": "https://plot.ly/~TestBot/14"
            },
            {
              "code": "layout/legends/legend-style/node_js/code.txt",
              "id": "legend-style",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Styling and Coloring the Legend",
              "parent": "legends",
              "type": "model",
              "url": "https://plot.ly/~TestBot/12"
            },
            {
              "code": "layout/legends/show-legend/node_js/code.txt",
              "id": "show-legend",
              "languages": [
                "python",
                "matlab",
                "r",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Hiding Legend Entries",
              "parent": "legends",
              "type": "model",
              "url": "https://plot.ly/~TestBot/10"
            }
          ],
          "description": "How to modify the legend in {language}\u00a0graphs. {num_categories} examples of how to move, color, and hide the legend.",
          "has_thumbnail": false,
          "id": "legends",
          "name": "Legends",
          "parent": "layout",
          "relative_url": "legend"
        },
        {
          "branches": [
            {
              "code": "layout/sizing/size-margins/node_js/code.txt",
              "id": "size-margins",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js",
                "plotly_js"
              ],
              "name": "Adjusting Height, Width, and Margins",
              "parent": "sizing",
              "type": "model",
              "url": "https://plot.ly/~TestBot/0"
            }
          ],
          "description": "How to change the size of graphs in {language}.",
          "has_thumbnail": false,
          "id": "sizing",
          "name": "Setting Graph Size",
          "parent": "layout",
          "relative_url": "setting-graph-size"
        }
      ],
      "has_thumbnail": false,
      "id": "layout",
      "name": "Layout Options",
      "parent": "hard-coded"
    },
    {
      "branches": [
        {
          "branches": [
            {
              "code": "file-settings/privacy/privacy-true/node_js/code.txt",
              "id": "privacy-true",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js"
              ],
              "name": "Public Graphs",
              "parent": "privacy",
              "type": "model",
              "url": "https://plot.ly/~TestBot/24"
            },
            {
              "code": "file-settings/privacy/privacy-false/node_js/code.txt",
              "id": "privacy-false",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js"
              ],
              "name": "Private Graphs",
              "parent": "privacy",
              "type": "model",
              "url": "https://plot.ly/~TestBot/25"
            }
          ],
          "description": "How to set the privacy settings of plotly graphs in {language}.",
          "has_thumbnail": false,
          "id": "privacy",
          "name": "Public vs Private Graphs",
          "parent": "file-settings",
          "relative_url": "privacy"
        },
        {
          "branches": [
            {
              "code": "file-settings/fileopt/new-graph/node_js/code.txt",
              "id": "new-graph",
              "languages": [
                "matlab",
                "r",
                "python",
                "julia",
                "node_js"
              ],
              "name": "Creating new files",
              "parent": "fileopt",
              "type": "model",
              "url": "https://plot.ly/~TestBot/257"
            },
            {
              "code": "file-settings/fileopt/overwrite/node_js/code.txt",
              "id": "overwrite",
              "languages": [
                "matlab",
                "r",
                "python",
                "julia",
                "node_js"
              ],
              "name": "Overwriting existing files",
              "parent": "fileopt",
              "type": "model",
              "url": "https://plot.ly/~TestBot/260"
            },
            {
              "code": "file-settings/fileopt/extend/node_js/code.txt",
              "id": "extend",
              "languages": [
                "matlab",
                "r",
                "python",
                "julia",
                "node_js"
              ],
              "name": "Extending existing traces",
              "parent": "fileopt",
              "type": "model",
              "url": "https://plot.ly/~TestBot/258"
            },
            {
              "code": "file-settings/fileopt/append/node_js/code.txt",
              "id": "append",
              "languages": [
                "matlab",
                "r",
                "python",
                "julia",
                "node_js"
              ],
              "name": "Adding new traces",
              "parent": "fileopt",
              "type": "model",
              "url": "https://plot.ly/~TestBot/259"
            }
          ],
          "description": "How to manage your files in {language} with the fileopt parameter.",
          "has_thumbnail": false,
          "id": "fileopt",
          "name": "Overwriting, Extending, Appending, and Creating New Graphs",
          "parent": "file-settings",
          "relative_url": "file-options"
        }
      ],
      "has_thumbnail": false,
      "id": "file-settings",
      "name": "File Settings",
      "parent": "hard-coded"
    },
    {
      "branches": [
        {
          "branches": [
            {
              "code": "get-requests-and-images/get-requests/get-requests-example/node_js/code.txt",
              "id": "get-requests-example",
              "languages": [
                "r",
                "matlab",
                "node_js"
              ],
              "name": "Get Requests",
              "parent": "get-requests",
              "type": "model",
              "url": "https://plot.ly/~TestBot/139"
            }
          ],
          "description": "How to download plotly users's public graphs and data with {language}.",
          "has_thumbnail": false,
          "id": "get-requests",
          "name": "Get Requests",
          "parent": "get-requests-and-images",
          "relative_url": "get-requests"
        },
        {
          "branches": [
            {
              "code": "get-requests-and-images/iframes/iframes/node_js/code.txt",
              "id": "iframes",
              "languages": [
                "python",
                "r",
                "matlab",
                "julia",
                "node_js"
              ],
              "name": "",
              "parent": "iframes",
              "type": "model",
              "url": "https://plot.ly/~TestBot/342"
            }
          ],
          "description": "How to embed plotly graphs with an iframe in HTML.",
          "has_thumbnail": false,
          "id": "iframes",
          "name": "Embedding Graphs in HTML",
          "parent": "get-requests-and-images",
          "relative_url": "embedding-plotly-graphs-in-HTML"
        },
        {
          "branches": [
            {
              "code": "get-requests-and-images/static-image/static-image-example/node_js/code.txt",
              "id": "static-image-example",
              "languages": [
                "python",
                "node_js"
              ],
              "name": "Static Image Export",
              "parent": "static-image",
              "type": "model",
              "url": "https://plot.ly/~TestBot/137"
            }
          ],
          "description": "How to export plotly graphs as static images in {language}. Plotly supports png, svg, jpg, and pdf image export.",
          "has_thumbnail": false,
          "id": "static-image",
          "name": "Static Image Export",
          "parent": "get-requests-and-images",
          "relative_url": "static-image-export"
        }
      ],
      "has_thumbnail": false,
      "id": "get-requests-and-images",
      "name": "Get Requests, Static Image Export, and Interactive Embedding",
      "parent": "hard-coded"
    }
  ],
  "has_thumbnail": false,
  "id": "hard-coded",
  "name": "API Page for the people"
}
