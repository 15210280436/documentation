[
  {
    "examplename":"2d-histogram",
    "prepend": {
      "python": [
        "import numpy as np\n",
        "x = np.random.randn(500)",
        "y = np.random.randn(500)+1"
      ],
      "r":[
        "x &lt;- rnorm(500)",
        "y &lt;- rnorm(500)+1"
      ],
      "matlab":[
        "x = randn(500,1);",
        "y = randn(500,1)+1;"
      ],
      "julia":[
        "x = randn(500)",
        "y = randn(500)+1"
      ]
    },
    "figure":{
      "data":[
        {
          "x":">>>x<<<",
          "y":">>>y<<<",
          "type":"histogram2d"
        }
      ]
    }
  },
  {
    "examplename":"2d-histogram-options",
    "prepend": {
      "python": [
        "import numpy as np\n",
        "x = np.random.randn(500)",
        "y = np.random.randn(500)+1"
      ],
      "r":[
        "x &lt;- rnorm(500)",
        "y &lt;- rnorm(500)+1"
      ],
      "matlab":[
        "x = randn(500,1);",
        "y = randn(500,1)+1;"
      ],
      "julia":[
        "x = randn(500)",
        "y = randn(500)+1"
      ]
    },
    "figure":{
      "data":[
        {
          "x":">>>x<<<",
          "y":">>>y<<<",
          "type":"histogram2d",
          "autobinx": false,
          "xbins": {
            "start": -3,
            "end": 3,
            "size": 0.1
          },
          "autobiny": false,
          "ybins": {
            "start": -2.5,
            "end": 4,
            "size": 0.1
          },
          "scl": [[0,"rgb(12,51,131)"],
                  [0.25,"rgb(10,136,186)"],
                  [0.5,"rgb(242,211,56)"],
                  [0.75,"rgb(242,143,56)"],
                  [1,"rgb(217,30,30)"]],
          "histnorm": "probability"
        }
      ]
    }
  },
  {
    "examplename":"2d-histogram-scatter",
    "prepend": {
      "python": [
        "import numpy as np",
        "\n",
        "x0 = np.random.randn(100)/5. + 0.5  # 5. enforces float division",
        "y0 = np.random.randn(100)/5. + 0.5",
        "x1 = np.random.rand(50)",
        "y1 = np.random.rand(50) + 1.0",
        "\n",
        "x = np.concatenate([x0, x1])",
        "y = np.concatenate([y0, y1])"
      ],
      "matlab": [
        "x0 = randn(100,1)./5. + 0.5;",
        "y0 = randn(100,1)./5. + 0.5;",
        "x1 = rand(50,1);",
        "y1 = rand(50,1) + 1.0;",
        "\n",
        "x = [x0; x1];",
        "y = [y0; y1];"
      ],
      "r": [
        "x0 &lt;- rnorm(100)/5. + 0.5",
        "y0 &lt;- rnorm(100)/5. + 0.5",
        "x1 &lt;- runif(50)",
        "y1 &lt;- runif(50) + 1.0",
        "\n",
        "x &lt;- c(x0, x1)",
        "y &lt;- c(y0, y1)"
      ],
      "julia": [
        "x0 = randn(100)/5. + 0.5",
        "y0 = randn(100)/5. + 0.5",
        "x1 = rand(50)",
        "y1 = rand(50) + 1.0",
        "\n",
        "x = [x0; x1]",
        "y = [y0; y1]"
      ]
    },
    "figure":{
      "data":[
        {
          "x":">>>x0<<<",
          "y":">>>y0<<<",
          "type":"scatter",
          "mode":"markers",
          "marker":{"symbol":"circle", "opacity": 0.7}
        },
        {
          "x":">>>x1<<<",
          "y":">>>y1<<<",
          "type":"scatter",
          "mode":"markers",
          "marker":{"symbol":"square", "opacity": 0.7}
        },
        {
          "x":">>>x<<<",
          "y":">>>y<<<",
          "type":"histogram2d"
        }
      ]
    }
  }
]